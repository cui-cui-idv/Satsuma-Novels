<%- include('partials/header') %>

<main class="container">
    <h2>アカウント設定</h2>

    <div class="card" style="margin-top: 2rem;">
        <h3 class="card-title">メールアドレスの変更</h3>
        <form id="update-email-form" class="auth-form-wrapper" style="margin: 0; max-width: none; background: none; border: none; padding: 0;">
            <div class="input-group">
                <label for="new-email">新しいメールアドレス</label>
                <input type="email" id="new-email" required>
            </div>
            <div class="input-group">
                <label for="current-password-for-email">現在のパスワード（確認用）</label>
                <input type="password" id="current-password-for-email" required>
            </div>
            <button type="submit" class="btn btn-primary">確認メールを送信</button>
            <p id="email-message" style="margin-top: 1rem; text-align: center;"></p>
        </form>
    </div>

    <div class="card" style="margin-top: 2rem;">
        <h3 class="card-title">パスワードの変更</h3>
        <form id="update-password-form" class="auth-form-wrapper" style="margin: 0; max-width: none; background: none; border: none; padding: 0;">
            <div class="input-group">
                <label for="current-password">現在のパスワード</label>
                <input type="password" id="current-password" required>
            </div>
            <div class="input-group">
                <label for="new-password">新しいパスワード</label>
                <input type="password" id="new-password" minlength="6" required>
            </div>
            <button type="submit" class="btn btn-primary">パスワードを更新</button>
            <p id="password-message" style="margin-top: 1rem; text-align: center;"></p>
        </form>
    </div>
</main>

<%- include('partials/footer') %>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const auth = firebase.auth();

    auth.onAuthStateChanged(user => {
        if (user) {
            // --- ユーザーがログインしている場合の処理 ---
            const emailForm = document.getElementById('update-email-form');
            const passwordForm = document.getElementById('update-password-form');
            const emailMessage = document.getElementById('email-message');
            const passwordMessage = document.getElementById('password-message');

            // --- メールアドレス変更処理 ---
            emailForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                emailMessage.textContent = '処理中...';
                emailMessage.style.color = 'var(--font-secondary)';
                
                const newEmail = document.getElementById('new-email').value;
                const password = document.getElementById('current-password-for-email').value;

                try {
                    // 1. 安全のため、現在のパスワードで再認証
                    const credential = firebase.auth.EmailAuthProvider.credential(user.email, password);
                    await user.reauthenticateWithCredential(credential);
                    
                    // 2. Firebaseにメールアドレス変更をリクエスト
                    // これにより、Firebaseが自動で新しいアドレスに確認メールを送信します
                    await user.updateEmail(newEmail);
                    
                    // 3. ユーザーに成功メッセージを表示する
                    emailMessage.style.color = 'var(--accent-primary)';
                    emailMessage.textContent = `確認メールを ${newEmail} に送信しました。メール内のリンクをクリックして変更を完了してください。`;
                    emailForm.reset();

                } catch (error) {
                    console.error("メール更新リクエストエラー:", error);
                    emailMessage.style.color = '#ff4d4d';
                    if (error.code === 'auth/wrong-password') {
                        emailMessage.textContent = 'エラー: 現在のパスワードが正しくありません。';
                    } else if (error.code === 'auth/email-already-in-use') {
                        emailMessage.textContent = 'エラー: そのメールアドレスは既に使用されています。';
                    } else {
                        emailMessage.textContent = 'エラーが発生しました。時間をおいて再試行してください。';
                    }
                }
            });

            // --- パスワード変更処理 ---
            passwordForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                passwordMessage.textContent = '処理中...';
                passwordMessage.style.color = 'var(--font-secondary)';

                const currentPassword = document.getElementById('current-password').value;
                const newPassword = document.getElementById('new-password').value;
                
                try {
                    const credential = firebase.auth.EmailAuthProvider.credential(user.email, currentPassword);
                    await user.reauthenticateWithCredential(credential);

                    await user.updatePassword(newPassword);
                    
                    passwordMessage.style.color = 'var(--accent-primary)';
                    passwordMessage.textContent = 'パスワードが正常に更新されました。';
                    passwordForm.reset();
                } catch (error) {
                    console.error("パスワード更新エラー:", error);
                    passwordMessage.style.color = '#ff4d4d';
                    passwordMessage.textContent = 'エラー: ' + error.message;
                }
            });
            
        } else {
            // --- ユーザーがログインしていない場合の処理 ---
            const container = document.querySelector('.container');
            if(container) {
                container.innerHTML = `
                    <h2>アカウント設定</h2>
                    <div class="card" style="text-align:center;">
                        <p>この機能を利用するには、ログインが必要です。</p>
                        <a href="/login" class="btn btn-primary" style="margin-top:1rem;">ログインページへ</a>
                    </div>
                `;
            }
        }
    });
});
</script>