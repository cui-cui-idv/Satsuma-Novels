<%- include('partials/header') %>
<div class="auth-container">
    <div class="auth-form-wrapper">
        <h2>ログイン</h2>
        <form id="login-form">
            <div class="input-group">
                <input type="email" id="email" name="email" required placeholder="メールアドレス">
            </div>
            <div class="input-group">
                <input type="password" id="password" name="password" required placeholder="パスワード">
            </div>
            <button type="submit" class="btn btn-primary">ログイン</button>
        </form>
        <p id="error-message" style="color: #ff4d4d; text-align: center; margin-top: 1rem;"></p>
        <div style="text-align: center; margin-top: 1.5rem;">
            <a href="/forgot-password">パスワードをお忘れですか？</a>
        </div>
        <p style="text-align: center; margin-top: 1rem; color: var(--font-secondary);">
            アカウントをお持ちでないですか？ <a href="/register" style="color: var(--accent-primary);">新規登録</a>
        </p>
    </div>
</div>

<script>
    const loginForm = document.getElementById('login-form');
    const errorMessage = document.getElementById('error-message');

    loginForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const email = loginForm.email.value;
        const password = loginForm.password.value;
        errorMessage.textContent = '';

        // ▼▼▼ reCAPTCHAの実行を追加 ▼▼▼
        // reCAPTCHAの準備ができたら処理を開始
        grecaptcha.ready(function() {
            // サイトキーを使ってトークンを要求
            grecaptcha.execute('<%= firebaseConfig.recaptchaSiteKey %>', {action: 'login'}).then(async function(token) {
                
                // reCAPTCHAトークンが取得できたら、ログイン処理を実行
                try {
                    // 1. Firebase Authenticationでログイン
                    const userCredential = await firebase.auth().signInWithEmailAndPassword(email, password);
                    
                    // 2. ユーザーのIDトークンを取得
                    const idToken = await userCredential.user.getIdToken();

                    // 3. IDトークンとreCAPTCHAトークンをサーバーの/loginエンドポイントに送信
                    const response = await fetch('/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ 
                            idToken: idToken,
                            recaptchaToken: token // reCAPTCHAトークンを追加
                        }),
                    });

                    if (response.ok) {
                        // ログイン成功後、ホームページにリダイレクト
                        window.location.href = '/';
                    } else {
                        const errorData = await response.text();
                        errorMessage.textContent = 'サーバーログインに失敗しました: ' + errorData;
                    }

                } catch (error) {
                    console.error('Firebaseログインエラー:', error);
                    if (error.code === 'auth/wrong-password' || error.code === 'auth/user-not-found') {
                        errorMessage.textContent = 'メールアドレスまたはパスワードが正しくありません。';
                    } else {
                        errorMessage.textContent = 'ログイン中にエラーが発生しました。';
                    }
                }
            });
        });
    });
</script>

<%- include('partials/footer') %>